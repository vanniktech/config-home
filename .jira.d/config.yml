user: vanniktech
login: niklas.baudy@vanniktech.de

custom-commands:
  - name: mine
    help: display issues assigned to me
    script: |-
      {{jira}} list --template table --query "resolution = unresolved AND project=$JIRA_PROJECT AND assignee=currentuser() ORDER BY status, issue"
  - name: mine-created
    help: display issues created by me
    script: |-
      {{jira}} list --template table --query "resolution = unresolved AND project=$JIRA_PROJECT AND creator=currentuser() ORDER BY created"
  - name: delete
    help: deletes the given ticket
    args:
      - name: ticketnumber
        required: true
    script: |
      {{jira}} req -M DELETE "/rest/api/2/issue/{{args.ticketnumber}}"
  - name: sprint-add
    help: add issue to active sprint for project
    args:
      - name: ticketnumber
        required: true
    script: |
      board_id=$({{jira}} req "/rest/agile/1.0/board?projectKeyOrId=$JIRA_PROJECT" --gjq values.0.id)
      sprint_id=$({{jira}} req "/rest/agile/1.0/board/$board_id/sprint?state=active" --gjq values.0.id)
      {{jira}} req -M POST "/rest/agile/1.0/sprint/$sprint_id/issue" "{\"issues\":[\"{{args.ticketnumber}}\"]}"
  - name: sprint-information
    help: show information of the active sprint for project
    script: |
      board_id=$({{jira}} req "/rest/agile/1.0/board?projectKeyOrId=$JIRA_PROJECT" --gjq values.0.id)
      {{jira}} req "/rest/agile/1.0/board/$board_id/sprint?state=active" --gjq values.0 --template table
  - name: c
    help: creates an issuetype in the given project
    options:
      - name: project
        short: p
        default: $JIRA_PROJECT
      - name: description
        short: d
        default: ""
    args:
      - name: summary
        required: true
      - name: issuetype
        default: "Task"
    script: |-
      if [ "Epic" = "{{args.issuetype}}" ]; then
        {{jira}} epic create --epic-name="{{args.summary}}" -o summary="{{args.summary}}" -o customfield_10120="{{args.summary}}" -o description="{{options.description}}" --noedit
      else
        {{jira}} create --issuetype={{args.issuetype}} -o summary="{{args.summary}}" -o description="{{options.description}}" --noedit --saveFile /tmp/c.yml
        issue=$(grep issue /tmp/c.yml | awk '{print $2}')
      fi